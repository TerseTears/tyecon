% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsl.R
\name{conserve}
\alias{conserve}
\title{Maintain name as binding in local environment}
\usage{
conserve(obj, name)
}
\arguments{
\item{obj}{[R \code{object}] Any object, specifically data.}

\item{name}{[\code{symbol} or \code{string}] The name to which the object will be
bound locally}
}
\value{
The \code{obj} itself. The side effect being local binding of the \code{obj} to
the specified \code{name}.
}
\description{
\code{conserve} allows its first argument to be bound to the name given as its
second argument in the local environment.
}
\section{Conserving Intermediate Objects}{
The best use of \code{conserve} is when one needs to keep an object in a long
sequence of commands to be used later in the same sequence (so mostly pipes).
It is essential to provide this local context (e.g. using \code{local} or inside
functions) and avoid altering the global environment, since internally,
\code{rlang::local_bindings} is used. The \code{conserve} function is what is used with
the "pipem" pipe to bind intermediary objects to provided symbols. Exported
for the rare occasion it may be useful on its own. One can also specifically
set \code{conserve(name)} directives among the \code{pipem} instructions.
}

\seealso{
Other result assemblers: 
\code{\link{\%->\%}()},
\code{\link{\%to\%}()}
}
\concept{result assemblers}
