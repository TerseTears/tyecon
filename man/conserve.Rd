% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monadic.R
\name{conserve}
\alias{conserve}
\title{Maintain name as binding in local environment}
\usage{
conserve(obj, name, value)
}
\arguments{
\item{obj}{[R \code{object}] Any object, specifically data.}

\item{name}{[\code{symbol} or \code{string}] The name to which a value is to be
bound locally.}

\item{value}{[R \code{object}] The value for the name.}
}
\value{
The \code{obj} itself. The side effect being local binding of \code{value} to
the specified \code{name}.
}
\description{
\code{conserve} allows its third argument to be bound to the name given as its
second argument in the local environment, while returning the first argument.
A sort of side-effect function which binds to the caller environment.
}
\section{Conserving Intermediate Objects}{
The best use of \code{conserve} is when one needs to keep an object in a long
sequence of commands to be used later in the same sequence (so mostly pipes).
It is essential to provide this local context (e.g. using \code{local} or inside
functions) and avoid altering the global environment, since internally,
\code{rlang::local_bindings} is used. The \code{conserve} function is what is used with
the "convey" pipe to bind intermediary objects to provided symbols. Exported
for the rare occasion it may be useful on its own. One can also specifically
set \code{conserve(name, value)} directives among the \code{convey} instructions.

The \code{value} argument can be specified in as a \code{magrittr} pipe context. That
is, automatic data masking as well as the \code{.} symbol representing the
original object.
}

\seealso{
Other result assemblers: 
\code{\link{\%$>\%}()},
\code{\link{\%->\%}()},
\code{\link{\%to\%}()}
}
\concept{result assemblers}
